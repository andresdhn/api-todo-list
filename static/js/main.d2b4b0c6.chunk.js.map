{"version":3,"sources":["components/Todo.js","components/List.js","components/Form.js","components/App.js","index.js"],"names":["Todo","props","useState","title","setTitle","edit","setEdit","listEl","useRef","handleEdit","handleDelete","onDelete","current","id","handleComplete","onComplete","handleUpdate","onUpdate","ref","className","completed","autoFocus","onChange","e","target","value","onBlur","onClick","List","items","filter","item","itemsC","map","todo","key","length","Form","newTodo","setNewTodo","onSubmit","preventDefault","onNewTodo","type","App","todos","setTodos","useEffect","fetch","then","res","json","catch","error","console","log","userId","Date","now","newTodos","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d2b4b0c6.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react'\n//\nconst Todo = props => {\n    const [title, setTitle] = useState(props.title)\n    const [edit, setEdit] = useState(false)\n    const listEl = useRef(null)\n\n    const handleEdit = () => {\n        setEdit(!edit)\n    }\n\n    const handleDelete = () => {\n        props.onDelete(listEl.current.id)\n    }\n\n    const handleComplete = () => {\n        props.onComplete(listEl.current.id)\n    }\n\n    const handleUpdate = () => {\n        props.onUpdate(listEl.current.id, title)\n        setEdit(false)\n    }\n\n    const renderItem = () => (\n        <div className=\"d-flex justify-content-between\">\n            <div\n                onClick={handleComplete}\n                className={`btn ${\n                    props.completed ? 'btn-outline-dark' : 'btn-outline-primary'\n                }`}\n            >\n                {props.completed ? '-' : 'âœ“'}\n            </div>\n            <div onClick={handleEdit} className=\"btn flex-fill text-left\">\n                {title}\n            </div>\n            <div onClick={handleDelete} className=\"btn btn-outline-danger\">\n                X\n            </div>\n        </div>\n    )\n\n    const renderEdit = () => (\n        <input\n            autoFocus\n            onChange={e => setTitle(e.target.value)}\n            value={title}\n            onBlur={handleUpdate}\n            className=\"form-control\"\n        />\n    )\n\n    return (\n        <div\n            id={props.id}\n            ref={listEl}\n            className={`list-group-item list-group-item-action ${\n                props.completed ? 'list-group-item-secondary' : ''\n            }`}\n        >\n            {edit ? renderEdit() : renderItem()}\n        </div>\n    )\n}\nexport default Todo\n","import React from 'react'\nimport Todo from './Todo'\n//\nconst List = props => {\n    const items = props.items.filter(item => item.completed !== true)\n    const itemsC = props.items.filter(item => item.completed === true)\n\n    return (\n        <div className=\"list\">\n            <div className=\"list-group\">\n                {items.map(todo => (\n                    <Todo\n                        id={todo.id}\n                        key={todo.id}\n                        title={todo.title}\n                        onUpdate={props.onUpdate}\n                        onDelete={props.onDelete}\n                        onComplete={props.onComplete}\n                    />\n                ))}\n                <div>\n                    <hr />\n                </div>\n                {itemsC.map(todo => (\n                    <Todo\n                        id={todo.id}\n                        key={todo.id}\n                        title={todo.title}\n                        completed={true}\n                        onUpdate={props.onUpdate}\n                        onDelete={props.onDelete}\n                        onComplete={props.onComplete}\n                    />\n                ))}\n            </div>\n            <div className=\"row\">\n                <div className=\"col\">\n                    <p>{`${items.length} pending / ${itemsC.length} completed`}</p>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default List\n","import React, { useState } from 'react'\n//\nconst Form = props => {\n    const [newTodo, setNewTodo] = useState('')\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        if (newTodo.length > 0) {\n            props.onNewTodo(newTodo)\n            setNewTodo('')\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className=\"input-group\">\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={newTodo}\n                    onChange={e => setNewTodo(e.target.value)}\n                />\n                <span className=\"input-group-btn\">\n                    <button type=\"submit\" className=\"btn btn-success\">\n                        Add\n                    </button>\n                </span>\n            </div>\n        </form>\n    )\n}\nexport default Form\n","import React, { useState, useEffect } from 'react'\nimport List from './List'\nimport Form from './Form'\n//\nfunction App() {\n    const [todos, setTodos] = useState([])\n\n    useEffect(() => {\n        fetch('https://jsonplaceholder.typicode.com/todos?_page=1&_limit=10')\n            .then(res => res.json())\n            .then(json => setTodos(json))\n            .catch(error => console.log(error))\n    }, [])\n\n    const handleSubmit = todo => {\n        setTodos([\n            ...todos,\n            { userId: 1, id: Date.now(), completed: false, title: todo },\n        ])\n    }\n\n    const handleUpdate = (id, newTodo) => {\n        let newTodos = todos.map(todo => {\n            if (Number(todo.id) === Number(id)) {\n                todo.title = newTodo\n            }\n            return todo\n        })\n        setTodos(newTodos)\n    }\n\n    const handleDelete = id => {\n        let newTodos = todos.filter(todo => Number(todo.id) !== Number(id))\n        setTodos(newTodos)\n    }\n\n    const handleComplete = id => {\n        let newTodos = todos.map(todo => {\n            if (Number(todo.id) === Number(id)) {\n                todo.completed = !todo.completed\n            }\n            return todo\n        })\n        setTodos(newTodos)\n    }\n\n    return (\n        <div id=\"app\" className=\"mt-5\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-md-6\">\n                        <div className=\"card bg-gray\">\n                            <div className=\"card-body\">\n                                <h3>To-Dos</h3>\n                                <Form onNewTodo={handleSubmit} />\n                                <br />\n                                <List\n                                    items={todos}\n                                    onUpdate={handleUpdate}\n                                    onDelete={handleDelete}\n                                    onComplete={handleComplete}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './components/App'\n//\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}