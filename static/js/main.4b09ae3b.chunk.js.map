{"version":3,"sources":["components/ListItem.js","components/ListForm.js","components/List.js","components/App.js","index.js"],"names":["ListItem","handleClick","e","props","onSelected","target","id","this","className","onClick","title","Component","ListForm","handleChange","setState","value","handleSubmit","preventDefault","onSubmited","state","onSubmit","bind","onChange","List","handleSelected","handleNewItem","name","form","listItems","map","item","key","App","updateLists","todos","completed","selectedItem","filter","parseInt","newTodos","newCompleted","push","length","handleUncompleted","newItem","handleNewTodo","fetch","then","response","json","data","catch","error","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4b09ae3b.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './ListItem.scss'\n\nclass ListItem extends Component {\n    handleClick = e => {\n        this.props.onSelected(e.target.id)\n    }\n\n    render() {\n        return (\n            <div\n                id={this.props.id}\n                className=\"List__item\"\n                onClick={this.handleClick}\n            >\n                {this.props.title}\n            </div>\n        )\n    }\n}\n\nexport default ListItem\n","import React, { Component } from 'react'\n\nclass ListForm extends Component {\n    constructor() {\n        super()\n        this.state = {\n            title: '',\n        }\n    }\n\n    handleChange = e => {\n        this.setState({ title: e.target.value })\n    }\n\n    handleSubmit = e => {\n        e.preventDefault()\n        this.props.onSubmited(this.state.title)\n        this.setState({ title: '' })\n    }\n\n    render() {\n        return (\n            <form\n                className=\"List__form\"\n                onSubmit={this.handleSubmit.bind(this)}\n            >\n                <input\n                    className=\"form__control\"\n                    value={this.state.title}\n                    onChange={this.handleChange.bind(this)}\n                />\n            </form>\n        )\n    }\n}\nexport default ListForm\n","import React, { Component } from 'react'\nimport './List.scss'\nimport ListItem from './ListItem'\nimport ListForm from './ListForm'\n\nclass List extends Component {\n    handleSelected = id => {\n        this.props.onSelected(id)\n    }\n\n    handleNewItem = title => {\n        this.props.onSubmited(title)\n    }\n\n    render() {\n        return (\n            <div\n                className={`List ${\n                    this.props.name === 'Completed' ? 'List--completed' : ''\n                }`}\n            >\n                <div className=\"List__title\">\n                    <h2>{this.props.name}</h2>\n                    {this.props.form && (\n                        <ListForm onSubmited={this.handleNewItem} />\n                    )}\n                </div>\n                <div className=\"List__content\">\n                    {this.props.listItems &&\n                        this.props.listItems.map(item => {\n                            return (\n                                <ListItem\n                                    key={item.id}\n                                    id={item.id}\n                                    title={item.title}\n                                    onSelected={this.handleSelected}\n                                />\n                            )\n                        })}\n                </div>\n            </div>\n        )\n    }\n}\nexport default List\n","import React, { Component } from 'react'\nimport './App.scss'\n//\nimport List from './List'\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            todos: [],\n            completed: [],\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/todos?_page=1&_limit=5')\n            .then(response => response.json())\n            .then(data => this.setState({ todos: data }))\n            .catch(error => console.log(error))\n    }\n\n    updateLists = (todos, completed) => {\n        this.setState({ todos: todos, completed: completed })\n    }\n\n    handleSelected = id => {\n        let selectedItem = this.state.todos.filter(\n            item => parseInt(item.id) === parseInt(id)\n        )\n\n        let newTodos = this.state.todos.filter(\n            item => parseInt(item.id) !== parseInt(id)\n        )\n\n        let newCompleted = this.state.completed\n        newCompleted.push({\n            id: this.state.completed.length + 1,\n            title: selectedItem[0].title,\n        })\n\n        this.updateLists(newTodos, newCompleted)\n    }\n\n    handleUncompleted = id => {\n        let selectedItem = this.state.completed.filter(\n            item => parseInt(item.id) === parseInt(id)\n        )\n\n        let newCompleted = this.state.completed.filter(\n            item => parseInt(item.id) !== parseInt(id)\n        )\n\n        let newTodos = this.state.todos\n        let newItem = {\n            id: this.state.todos.length + 1,\n            title: selectedItem[0].title,\n        }\n        newTodos.push(newItem)\n        this.updateLists(newTodos, newCompleted)\n    }\n\n    handleNewTodo = title => {\n        let newTodos = this.state.todos\n        let newItem = {\n            id: this.state.todos.length + 1,\n            title: title,\n        }\n\n        newTodos.push(newItem)\n        this.setState({ todos: newTodos })\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"container\">\n                    <List\n                        name=\"Todos\"\n                        form={true}\n                        listItems={this.state.todos}\n                        onSelected={this.handleSelected}\n                        onSubmited={this.handleNewTodo}\n                    />\n                    <List\n                        name=\"Completed\"\n                        listItems={this.state.completed}\n                        onSelected={this.handleUncompleted}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n//\nimport './index.scss'\nimport App from './components/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}